name: Main
on: push
jobs:
  functions:
    name: Functions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Installing Packages
        working-directory: ./functions
        run: yarn install
      - name: Running Unit Tests
        working-directory: ./functions
        run: yarn run test
      - name: Uploading Test Reports
        uses: actions/upload-artifact@v1
        with:
          name: functions-coverage
          path: ./functions/coverage
  client:
    name: Client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Installing Packages
        working-directory: ./client
        run: yarn install
      - name: Running Unit Tests
        working-directory: ./client
        env:
          CI: true
        run: yarn run test
      - name: Building Client App
        working-directory: ./client
        run: yarn run build
      - name: Uploading Test Reports
        uses: actions/upload-artifact@v1
        with:
          name: client-coverage
          path: ./client/coverage
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Configure Terraform
        shell: bash
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
        run: |
          echo "access_key  = \"$AWS_ACCESS_KEY\"" >  terraform.tfvars
          echo "secret_key  = \"$AWS_SECRET_KEY\"" >> terraform.tfvars
          echo 'domain      = "example.com"'       >> terraform.tfvars
          echo 'environment = "test"'              >> terraform.tfvars
          echo '"region     = "us-east-1"'         >> terraform.tfvars
      - name: Validate Infrastructure
        working-directory: ./terraform/infrastructure
        run: |
          terraform init -backend=false
          terraform validate
      - name: Validate Scaffold
        working-directory: ./terraform/scaffold
        run: |
          terraform init -backend=false
          terraform validate
      - name: Validate Serverless
        working-directory: ./terraform/serverless
        run: |
          terraform init -backend=false
          terraform validate
